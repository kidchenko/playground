type: edu
custom_name: Default arguments
files:
- name: src/Task.kt
  visible: true
  placeholders:
  - offset: 0
    length: 69
    placeholder_text: 'fun foo(name: String, number: Int, toUpperCase: Boolean)'
    initial_state:
      length: 56
      offset: 0
    initialized_from_dependency: false
    possible_answer: 'fun foo(name: String, number: Int = 42, toUpperCase: Boolean
      = false)'
    selected: true
    status: Solved
  text: |
    fun foo(name: String, number: Int, toUpperCase: Boolean) =
            (if (toUpperCase) name.toUpperCase() else name) + number

    fun useFoo() = listOf(
            foo("a"),
            foo("b", number = 1),
            foo("c", toUpperCase = true),
            foo(name = "d", number = 2, toUpperCase = true)
    )
  learner_created: false
- name: test/tests.kt
  visible: false
  text: |-
    import org.junit.Test
    import org.junit.Assert

    class TestDefaultAndNamedParams() {

        @Test(timeout = 1000)
        fun testDefaultAndNamedParams() {
            Assert.assertEquals("'useFoo()' returns wrong result\n",
                    listOf("a42", "b1", "C42", "D2"), useFoo())
        }
    }
  learner_created: false
status: Solved
record: -1
